<?php

namespace Proxies\__CG__\App\Entity\Main;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Facturacion extends \App\Entity\Main\Facturacion implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'idFac', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'idUsuFac', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'anioFac', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'mesFac', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'fechaFac', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'numeroFactura', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'numeroFacturaInternacional', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'tituloFac', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'archivoFac', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'idFacOpc', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'importe', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'metodoPago', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'pagado', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'impuesto'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'idFac', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'idUsuFac', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'anioFac', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'mesFac', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'fechaFac', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'numeroFactura', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'numeroFacturaInternacional', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'tituloFac', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'archivoFac', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'idFacOpc', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'importe', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'metodoPago', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'pagado', '' . "\0" . 'App\\Entity\\Main\\Facturacion' . "\0" . 'impuesto'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Facturacion $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getIdFac(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getIdFac();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdFac', []);

        return parent::getIdFac();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdUsuFac(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdUsuFac', []);

        return parent::getIdUsuFac();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdUsuFac(int $idUsuFac): \App\Entity\Main\Facturacion
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdUsuFac', [$idUsuFac]);

        return parent::setIdUsuFac($idUsuFac);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnioFac(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnioFac', []);

        return parent::getAnioFac();
    }

    /**
     * {@inheritDoc}
     */
    public function setAnioFac(string $anioFac): \App\Entity\Main\Facturacion
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnioFac', [$anioFac]);

        return parent::setAnioFac($anioFac);
    }

    /**
     * {@inheritDoc}
     */
    public function getMesFac(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMesFac', []);

        return parent::getMesFac();
    }

    /**
     * {@inheritDoc}
     */
    public function setMesFac(string $mesFac): \App\Entity\Main\Facturacion
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMesFac', [$mesFac]);

        return parent::setMesFac($mesFac);
    }

    /**
     * {@inheritDoc}
     */
    public function getFechaFac(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFechaFac', []);

        return parent::getFechaFac();
    }

    /**
     * {@inheritDoc}
     */
    public function setFechaFac(\DateTimeInterface $fechaFac): \App\Entity\Main\Facturacion
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFechaFac', [$fechaFac]);

        return parent::setFechaFac($fechaFac);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumeroFactura(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumeroFactura', []);

        return parent::getNumeroFactura();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumeroFactura(int $numeroFactura): \App\Entity\Main\Facturacion
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumeroFactura', [$numeroFactura]);

        return parent::setNumeroFactura($numeroFactura);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumeroFacturaInternacional(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumeroFacturaInternacional', []);

        return parent::getNumeroFacturaInternacional();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumeroFacturaInternacional(?int $numeroFacturaInternacional): \App\Entity\Main\Facturacion
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumeroFacturaInternacional', [$numeroFacturaInternacional]);

        return parent::setNumeroFacturaInternacional($numeroFacturaInternacional);
    }

    /**
     * {@inheritDoc}
     */
    public function getTituloFac(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTituloFac', []);

        return parent::getTituloFac();
    }

    /**
     * {@inheritDoc}
     */
    public function setTituloFac(string $tituloFac): \App\Entity\Main\Facturacion
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTituloFac', [$tituloFac]);

        return parent::setTituloFac($tituloFac);
    }

    /**
     * {@inheritDoc}
     */
    public function getArchivoFac(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArchivoFac', []);

        return parent::getArchivoFac();
    }

    /**
     * {@inheritDoc}
     */
    public function setArchivoFac(string $archivoFac): \App\Entity\Main\Facturacion
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArchivoFac', [$archivoFac]);

        return parent::setArchivoFac($archivoFac);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdFacOpc(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdFacOpc', []);

        return parent::getIdFacOpc();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdFacOpc(bool $idFacOpc): \App\Entity\Main\Facturacion
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdFacOpc', [$idFacOpc]);

        return parent::setIdFacOpc($idFacOpc);
    }

    /**
     * {@inheritDoc}
     */
    public function getImporte(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImporte', []);

        return parent::getImporte();
    }

    /**
     * {@inheritDoc}
     */
    public function setImporte(float $importe): \App\Entity\Main\Facturacion
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImporte', [$importe]);

        return parent::setImporte($importe);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetodoPago(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetodoPago', []);

        return parent::getMetodoPago();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetodoPago(?int $metodoPago): \App\Entity\Main\Facturacion
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetodoPago', [$metodoPago]);

        return parent::setMetodoPago($metodoPago);
    }

    /**
     * {@inheritDoc}
     */
    public function getPagado(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPagado', []);

        return parent::getPagado();
    }

    /**
     * {@inheritDoc}
     */
    public function setPagado(bool $pagado): \App\Entity\Main\Facturacion
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPagado', [$pagado]);

        return parent::setPagado($pagado);
    }

    /**
     * {@inheritDoc}
     */
    public function getImpuesto(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImpuesto', []);

        return parent::getImpuesto();
    }

    /**
     * {@inheritDoc}
     */
    public function setImpuesto(int $impuesto): \App\Entity\Main\Facturacion
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImpuesto', [$impuesto]);

        return parent::setImpuesto($impuesto);
    }

}
